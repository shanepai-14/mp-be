{
    "openapi": "3.0.0",
    "info": {
        "title": "GPSLink Gateway",
        "description": "Available API for GPSLink Gateway",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {

        "/vehicle/create": {
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Create vehicle",
                "operationId": "CreateVehicle",
                "requestBody": {
                    "description": "Vehicle Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "device_id_plate_no": {
                                        "type": "string"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "device_id_plate_no": "ATH0001",
                                    "vendor_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Vehicle already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicle/create-complete-info": {
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Create vehicle with assignment and customer",
                "operationId": "CreateVehicleAssignmentCustomer",
                "requestBody": {
                    "description": "Vehicle, Assignment and Customer Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "device_id_plate_no": {
                                        "type": "string"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    },
                                    "vehicle_status": {
                                        "type": "integer"
                                    },
                                    "driver_name": {
                                        "type": "string"
                                    },
                                    "mileage": {
                                        "type": "integer"
                                    },
                                    "customer_code": {
                                        "type": "string"
                                    },
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "customer_id": {
                                                    "type": "integer"
                                                },
                                                "ipport_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "device_id_plate_no": "ATH0001",
                                    "vendor_id": 1,
                                    "vehicle_status": 4,
                                    "driver_name": "Juan Dela Cruz",
                                    "mileage": 0,
                                    "customer_code": "ICPL, ALNC",
                                    "customers": [
                                        {
                                            "customer_id": 1,
                                            "ipport_id": 1
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle is successfully registered"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Vehicle already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicle/list": {
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get list of registered vehicles",
                "operationId": "VehicleList",
                "requestBody": {
                    "description": "Vendor Id - NOTE: If vendor_id object is omitted then all users will be return.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vendor_id": 0
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicle/vehicleById/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle by vehicle id",
                "operationId": "GetVehicleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicle/update/{id}": {
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Updated Vehicle",
                "description": "Update vehicle information.",
                "operationId": "UpdateVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "device_id_plate_no": {
                                        "type": "string"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle is successfully updated!"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    },
                    "409": {
                        "description": "Vehicle Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicle/massUpdate": {
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Updated Vehicles",
                "description": "Mass update vehicle information.",
                "operationId": "MassUpdateVehicle",
                "requestBody": {
                    "description": "Updated vehicles array of object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "device_id_plate_no": {
                                        "type": "string"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle is successfully updated!"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicle/delete/{id}": {
            "delete": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Delete vehicle by vehicle id",
                "operationId": "DeleteVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle is successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle does not exist!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/current/create": {
            "post": {
                "tags": [
                    "Current"
                ],
                "summary": "Create Current Customer Info",
                "operationId": "CreateCurrentCustomer",
                "requestBody": {
                    "description": "Customer Customer Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_assignment_id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "ipport_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vehicle_assignment_id": 1,
                                    "customer_id": 1,
                                    "ipport_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Current customer is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentCustomer"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Current customer already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/current/currentCustById/{id}": {
            "get": {
                "tags": [
                    "Current"
                ],
                "summary": "Get current customer by id",
                "operationId": "GetCurrentCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentCustomer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Current Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/current/list": {
            "post": {
                "tags": [
                    "Current"
                ],
                "summary": "Get list of Currents",
                "operationId": "CurrentList",
                "requestBody": {
                    "description": "Customer Id - NOTE: If customer_id object is omitted then all current customers will be return.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "customer_id": 0
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/current/update/{id}": {
            "put": {
                "tags": [
                    "Current"
                ],
                "summary": "Updated Current",
                "description": "Update Current information.",
                "operationId": "UpdateCurrent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Current Customer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "vehicle_assignment_id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "ipport_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "id": 1,
                                    "vehicle_assignment_id": 1,
                                    "customer_id": 1,
                                    "ipport_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Current customer is successfully updated!"
                    },
                    "404": {
                        "description": "Current customer not found"
                    },
                    "409": {
                        "description": "Current customer Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/current/delete/{id}": {
            "delete": {
                "tags": [
                    "Current"
                ],
                "summary": "Delete Current by id",
                "operationId": "DeleteCurrent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current customer is successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentCustomer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Current customer does not exist!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/create": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create customer",
                "operationId": "CreateCustomer",
                "requestBody": {
                    "description": "Customer Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_name": {
                                        "type": "string"
                                    },
                                    "customer_address": {
                                        "type": "string"
                                    },
                                    "customer_contact_no": {
                                        "type": "string"
                                    },
                                    "customer_email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "customer_code": {
                                        "type": "string"
                                    },
                                    "customer_username": {
                                        "type": "string"
                                    },
                                    "customer_password": {
                                        "type": "string"
                                    },
                                    "customer_api_key": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "customer_name": "Customer1",
                                    "customer_address": "Singapore",
                                    "customer_contact_no": "+123123",
                                    "customer_email": "sample@sample.com",
                                    "customer_code": "0001",
                                    "customer_username": "",
                                    "customer_password": "",
                                    "customer_api_key": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Customer already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/customerById/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get customer by id",
                "operationId": "GetCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/list": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get list of customers",
                "operationId": "CustomerList",
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/update/{id}": {
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Updated Customer",
                "description": "Update Customer information.",
                "operationId": "UpdateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated customer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "customer_name": {
                                        "type": "string"
                                    },
                                    "customer_address": {
                                        "type": "string"
                                    },
                                    "customer_contact_no": {
                                        "type": "string"
                                    },
                                    "customer_email": {
                                        "type": "string"
                                    },
                                    "customer_code": {
                                        "type": "string"
                                    },
                                    "customer_username": {
                                        "type": "string"
                                    },
                                    "customer_password": {
                                        "type": "string"
                                    },
                                    "customer_api_key": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "id": 0,
                                    "customer_name": "Customer1",
                                    "customer_address": "Singapore",
                                    "customer_contact_no": "+123123",
                                    "customer_email": "sample@sample.com",
                                    "customer_code": "0001",
                                    "customer_username": "",
                                    "customer_password": "",
                                    "customer_api_key": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer is successfully updated!"
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "409": {
                        "description": "Customer Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/delete/{id}": {
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete Customer by id",
                "operationId": "DeleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer is successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer does not exist!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/ip-port/create": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create Customer IP and Port",
                "operationId": "CreateCustomerIpPort",
                "requestBody": {
                    "description": "Customer IP and Port Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "customer_id": 1,
                                    "ip": "123.123.123.123",
                                    "port": 123
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer IP and Port is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerIpPorts"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Customer IP and Port already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/ip-port/ipPortById/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get Customer IP and Port by id",
                "operationId": "GetCustomerIpPortById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerIpPorts"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer IP and Port not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/ip-port/list": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get list of Customer`s IP and Ports",
                "operationId": "CustomerIpPortList",
                "requestBody": {
                    "description": "Customer Id - NOTE: If customer_id object is omitted then all customers ip and port will be return.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "customer_id": 0,
                                    "vendor_id": 0
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/ip-port/update/{id}": {
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Updated Customer IP and Ports",
                "description": "Update Customer IP and Port information.",
                "operationId": "UpdateCustomerIPPORT",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Customer IP and Port object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "id": 0,
                                    "customer_id": 1,
                                    "ip": "123.123.123.123",
                                    "port": 123
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer IP and Port is successfully updated!"
                    },
                    "404": {
                        "description": "Customer IP and Port not found"
                    },
                    "409": {
                        "description": "Customer Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer/ip-port/delete/{id}": {
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete Customer IP and Port by id",
                "operationId": "DeleteCustomerIpPort",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer IP and Port is successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerIpPorts"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer IP and Port does not exist!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/position": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Send GPS Position",
                "operationId": "SendGPS",
                "requestBody": {
                    "description": "GPS Position Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gps"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized User"
                    },
                    "404": {
                        "description": "Vendor key not found"
                    },
                    "409": {
                        "description": "Vehicle is not registered"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/check-server": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Check Server Status",
                "operationId": "CheckServer",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/vendor/create-with-account": {
            "post": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Create Vendor and User Account",
                "operationId": "CreateVendorPublic",
                "requestBody": {
                    "description": "Vendor Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendor_name": {
                                        "type": "string"
                                    },
                                    "vendor_address": {
                                        "type": "string"
                                    },
                                    "vendor_contact_no": {
                                        "type": "string"
                                    },
                                    "vendor_email": {
                                        "type": "string"
                                    },
                                    "username_email": {
                                        "description": "Email for vendor's account username",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password for vendor's account",
                                        "type": "string"
                                    },
                                    "full_name": {
                                        "description": "Full name of vendor's user account",
                                        "type": "string"
                                    },
                                    "contact_no": {
                                        "type": "string"
                                    },
                                    "user_role": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vendor_name": "Vendor",
                                    "vendor_address": "Singapore",
                                    "vendor_contact_no": "+123123",
                                    "vendor_email": "vendor@sample.com",
                                    "username_email": "username@username.com",
                                    "password": "samplepassword",
                                    "full_name": "Juan Dela Cruz",
                                    "contact_no": "+222222",
                                    "user_role": "0"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transporter"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Vendor already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vendor/create": {
            "post": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Create Vendor",
                "operationId": "CreateVendor",
                "requestBody": {
                    "description": "Vendor Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendor_name": {
                                        "type": "string"
                                    },
                                    "vendor_address": {
                                        "type": "string"
                                    },
                                    "vendor_contact_no": {
                                        "type": "string"
                                    },
                                    "vendor_code": {
                                        "type": "integer"
                                    },
                                    "vendor_email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vendor_name": "Vendor",
                                    "vendor_address": "Singapore",
                                    "vendor_contact_no": "+123123",
                                    "vendor_code": "VE",
                                    "vendor_email": "vendor@sample.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vendor is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transporter"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Vendor already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vendor/list": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Get list of vendors",
                "operationId": "GetVendorList",
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transporter"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vendor/vendorById/{id}": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Get vendor by vendor id",
                "operationId": "GetVendorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transporter"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vendor/update/{id}": {
            "put": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Updated Vendor",
                "description": "Update Vendor information.",
                "operationId": "UpdateVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Vendor object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "vendor_name": {
                                        "type": "string"
                                    },
                                    "vendor_address": {
                                        "type": "string"
                                    },
                                    "vendor_contact_no": {
                                        "type": "string"
                                    },
                                    "vendor_code": {
                                        "type": "integer"
                                    },
                                    "vendor_email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vendor is successfully updated!"
                    },
                    "404": {
                        "description": "Vendor not found"
                    },
                    "400": {
                        "description": "Vendor Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vendor/delete/{id}": {
            "delete": {
                "tags": [
                    "Vendor"
                ],
                "summary": "Delete vendor by vendor id",
                "operationId": "DeleteVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendor is successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transporter"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vendor does not exist!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/list": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of registered users",
                "operationId": "UserList",
                "requestBody": {
                    "description": "Vendor Id - NOTE: If vendor_id object is omitted then all users will be return.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vendor_id": 0
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/userById/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by user id",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user id supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/update/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updated user",
                "description": "Update user information.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "username_email": {
                                        "type": "string"
                                    },
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    },
                                    "contact_no": {
                                        "type": "string"
                                    },
                                    "user_role": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User is successfully updated!"
                    },
                    "400": {
                        "description": "Invalid user id supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "409": {
                        "description": "User Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/updatePassword/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updated user password",
                "description": "Update user password.",
                "operationId": "updatePassword",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Old and new password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "oldPassword": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Password is successfully updated!"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "449": {
                        "description": "New password is the same with the previous password used."
                    },
                    "409": {
                        "description": "Incorrect old password"
                    },
                    "500": {
                        "description": "Failed to update password!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/resetPassword/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Reset user password",
                "description": "Reset user password.",
                "operationId": "ResetPassword",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be reset",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Password is successfully resetted!"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Failed to reset password!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logs out current logged in user session",
                "description": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/create": {
            "post": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Create Vehicle Assignment Info",
                "operationId": "CreateVehicleAssignment",
                "requestBody": {
                    "description": "Vehicle Assignment Information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "vehicle_status": {
                                        "type": "integer"
                                    },
                                    "driver_name": {
                                        "type": "string"
                                    },
                                    "mileage": {
                                        "description": "",
                                        "type": "integer"
                                    },
                                    "customer_code": {
                                        "description": "",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vehicle_id": 1,
                                    "vehicle_status": 4,
                                    "driver_name": "Juan Dela Cruz",
                                    "mileage": 1825,
                                    "customer_code": "ICPL, Alliance"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle assignment is successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleAssignment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Vehicle assignment already exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/assignmentById/{id}": {
            "get": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Get vehicle assignment by id",
                "operationId": "GetVehicleAssignmentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleAssignment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/list": {
            "post": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Get list of Assignments",
                "operationId": "AssignmentList",
                "requestBody": {
                    "description": "NOTE: If parameters are omitted then all vehicle assignments will be return.",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "vehicle_status": {
                                        "type": "integer"
                                    },
                                    "vendor_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "vehicle_id": 0,
                                    "vehicle_status": 0,
                                    "vendor_id": 0
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/update/{id}": {
            "put": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Updated Assignment",
                "description": "Update Assignment information.",
                "operationId": "UpdateAssignment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Vehicle Assignment object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "vehicle_status": {
                                        "type": "integer"
                                    },
                                    "driver_name": {
                                        "type": "string"
                                    },
                                    "mileage": {
                                        "type": "integer"
                                    },
                                    "customer_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "id": 1,
                                    "vehicle_id": 1,
                                    "vehicle_status": 4,
                                    "driver_name": "Juan Dela Cruz",
                                    "mileage": 1825,
                                    "customer_code": "ICPL, Alliance"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle Assignment is successfully updated!"
                    },
                    "404": {
                        "description": "Vehicle Assignment not found"
                    },
                    "409": {
                        "description": "Vehicle Assignment Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/update-assign-customer/{id}": {
            "put": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Updated Assignment and Customer",
                "description": "Update Assignment and Customer information.",
                "operationId": "UpdateAssignmentCust",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Vehicle Assignment and Customer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "vehicle_status": {
                                        "type": "integer"
                                    },
                                    "driver_name": {
                                        "type": "string"
                                    },
                                    "mileage": {
                                        "type": "integer"
                                    },
                                    "customer_code": {
                                        "type": "string"
                                    },
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "current_customer_id": {
                                                    "type": "integer"
                                                },
                                                "customer_id": {
                                                    "type": "integer"
                                                },
                                                "ipport_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle Assignment and Customer is successfully updated!"
                    },
                    "404": {
                        "description": "Vehicle Assignment not found"
                    },
                    "409": {
                        "description": "Vehicle Assignment Id does not matched!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/delete/{id}": {
            "delete": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Delete Assignment by id",
                "operationId": "DeleteAssignment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle assignment is successfully deleted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleAssignment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle assignment does not exist!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/approve/{id}": {
            "put": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Approve assignment",
                "description": "Approve vehicle assignment.",
                "operationId": "ApproveVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "customer_id": {
                                                    "type": "integer"
                                                },
                                                "ipport_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle assignment is approved!"
                    },
                    "404": {
                        "description": "Vehicle Assignment not found!"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/assignment/reject/{id}": {
            "delete": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Reject vehicle assignment",
                "description": "Reject vehicle assignment.",
                "operationId": "RejectVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle assignment is rejected!"
                    },
                    "404": {
                        "description": "Vehicle assignment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logs user into system",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User Credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username_email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "username_email": "wloc@example.com",
                                    "password": ""
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create user account",
                "operationId": "CreateUser",
                "requestBody": {
                    "description": "User Credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username_email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password for transporter's account",
                                        "type": "string"
                                    },
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "transporter_id": {
                                        "type": "integer"
                                    },
                                    "contact_no": {
                                        "type": "string"
                                    },
                                    "user_role": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "username_email": "wloc@example.com",
                                    "password": "samplepassword",
                                    "full_name": "Sample User",
                                    "transporter_id": "0",
                                    "contact_no": "+123",
                                    "user_role": "0"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "User or Email address already exist!"
                    },
                    "404": {
                        "description": "Transporter id does not exist!"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CurrentCustomer": {
                "title": "CurrentCustomer",
                "description": "CurrentCustomer",
                "required": [
                    "vehicle_assignment_id",
                    "customer_id",
                    "ipport_id"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_assignment_id": {
                        "description": "Vehicle Assignment ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer_id": {
                        "description": "Customer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ipport_id": {
                        "description": "IP and Port ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "register_by_user_id": {
                        "description": "Register By UserId",
                        "type": "integer",
                        "format": "int64"
                    },
                    "updated_by_user_id": {
                        "description": "Updated By UserId",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "title": "Customer",
                "description": "Customer",
                "required": [
                    "transporter_id",
                    "customer_name",
                    "customer_code"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer_name": {
                        "description": "Customer name",
                        "type": "string"
                    },
                    "customer_address": {
                        "description": "Customer Address",
                        "type": "string"
                    },
                    "customer_contact_no": {
                        "description": "Customer Contact no.",
                        "type": "string"
                    },
                    "customer_email": {
                        "description": "Customer Email",
                        "type": "string",
                        "format": "email"
                    },
                    "customer_code": {
                        "description": "Customer code",
                        "type": "string"
                    },
                    "register_by_user_id": {
                        "description": "Register By UserId",
                        "type": "integer",
                        "format": "int64"
                    },
                    "updated_by_user_id": {
                        "description": "Updated By UserId",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "CustomerIpPorts": {
                "title": "Customer IPs and Ports",
                "description": "Customer`s assigned IPs and Ports",
                "required": [
                    "customer_id",
                    "ip",
                    "port"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer_id": {
                        "description": "Customer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ip": {
                        "description": "IP address",
                        "type": "string"
                    },
                    "port": {
                        "description": "Port",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Gps": {
                "title": "Position",
                "description": "Position",
                "required": [
                    "CompanyKey",
                    "Timestamp",
                    "GPS",
                    "Ignition",
                    "Latitude",
                    "Longitude",
                    "Altitude",
                    "Speed",
                    "Course",
                    "Satellite_Count",
                    "ADC1",
                    "ADC2",
                    "Mileage",
                    "Vehicle_ID"
                ],
                "properties": {
                    "CompanyKey": {
                        "description": "Vendor API Key",
                        "type": "string",
                        "format": "string"
                    },
                    "Vehicle_ID": {
                        "description": "Vehicle Plate Number. Remove in-between spaces. Alphanumer only.",
                        "type": "string",
                        "format": "string"
                    },
                    "Timestamp": {
                        "description": "Position timeStamp in UTC FORMAT",
                        "type": "string",
                        "format": "datetime"
                    },
                    "GPS": {
                        "description": "1 - GPS tracker is online. 0 - GPS tracker is offline.",
                        "type": "integer",
                        "format": "int32"
                    },
                    "Ignition": {
                        "description": "1 - Ignition is ON. 0 - Ignition is OFF",
                        "type": "integer",
                        "format": "int32"
                    },
                    "Latitude": {
                        "description": "Coordinate of the position data. Precision: 6 decimal places",
                        "type": "number",
                        "format": "float"
                    },
                    "Longitude": {
                        "description": "Coordinate of the position data. Precision: 6 decimal places",
                        "type": "number",
                        "format": "float"
                    },
                    "Altitude": {
                        "description": "Altitude in meters. Set to 0 if data unavailable.",
                        "type": "number",
                        "format": "float"
                    },
                    "Speed": {
                        "description": "Range from 0 to 999 in kilometer per hour.",
                        "type": "integer",
                        "format": "int32"
                    },
                    "Course": {
                        "description": "Angle of direction where vehicle is heading in degrees. Range from 0 to 359",
                        "type": "integer",
                        "format": "int32"
                    },
                    "Satellite_Count": {
                        "description": "Number of satellites detected by the tracker. if data unavailable, set to 4 satellites.",
                        "type": "integer",
                        "format": "int32"
                    },
                    "ADC1": {
                        "description": "Device battery in volts. Minimum value: 0",
                        "type": "number",
                        "format": "float"
                    },
                    "ADC2": {
                        "description": "Vehicle battery in volts. Minimum value: 0",
                        "type": "number",
                        "format": "float"
                    },
                    "Mileage": {
                        "description": "Device mileage in kilometers",
                        "type": "integer",
                        "format": "int32"
                    },
                    "Drum_Status": {
                        "description": "2 - Unloading, 1 - Mixing, 0 - Stop",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "RPM": {
                        "description": "Concrete mixer drum rounds per minute.",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Transporter": {
                "title": "Transporter",
                "description": "Transporter",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vendor_name": {
                        "description": "Vendor Name",
                        "type": "string"
                    },
                    "vendor_address": {
                        "description": "Vendor Address",
                        "type": "string"
                    },
                    "vendor_contact_no": {
                        "description": "Vendor Contact no.",
                        "type": "string"
                    },
                    "vendor_email": {
                        "description": "Vendor Email",
                        "type": "string",
                        "format": "email"
                    },
                    "vendor_code": {
                        "description": "Vendor code",
                        "type": "string"
                    },
                    "vendor_key": {
                        "description": "Vendor Key",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User",
                "required": [
                    "username_email",
                    "full_name",
                    "vendor_id",
                    "user_role"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "username_email": {
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string",
                        "maximum": 255
                    },
                    "full_name": {
                        "description": "Full name",
                        "type": "string"
                    },
                    "vendor_id": {
                        "description": "Vendor ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "contact_no": {
                        "description": "Phone",
                        "type": "string",
                        "format": "msisdn"
                    },
                    "user_role": {
                        "description": "User Role ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "title": "Vehicle",
                "description": "Vehicle",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "device_id_plate_no": {
                        "description": "Device Id/Plate No.",
                        "type": "string"
                    },
                    "vendor_id": {
                        "description": "Transporter Id",
                        "type": "string"
                    },
                    "register_by_user_id": {
                        "description": "Register By UserId",
                        "type": "integer",
                        "format": "int64"
                    },
                    "updated_by_user_id": {
                        "description": "Updated By UserId",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "VehicleAssignment": {
                "title": "VehicleAssignments",
                "description": "VehicleAssignments",
                "required": [
                    "vehicle_id",
                    "vehicle_status",
                    "driver_name",
                    "mileage"
                ],
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_status": {
                        "description": "Vehicle Status Id",
                        "type": "string"
                    },
                    "customer_code": {
                        "description": "Customer code",
                        "type": "string"
                    },
                    "driver_name": {
                        "description": "Driver name",
                        "type": "string"
                    },
                    "mileage": {
                        "description": "Mileage",
                        "type": "integer",
                        "format": "int64"
                    },
                    "register_by_user_id": {
                        "description": "Register By UserId",
                        "type": "integer",
                        "format": "int64"
                    },
                    "updated_by_user_id": {
                        "description": "Updated By UserId",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}
